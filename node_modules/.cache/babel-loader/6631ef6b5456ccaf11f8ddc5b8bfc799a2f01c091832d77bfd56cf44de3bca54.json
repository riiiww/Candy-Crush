{"ast":null,"code":"import _toConsumableArray from\"/workspaces/Candy-Crush/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/workspaces/Candy-Crush/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from'react';import ScoreBoard from'./components/ScoreBoard';import blueCandy from'./images/blue-candy.png';import greenCandy from'./images/green-candy.png';import orangeCandy from'./images/orange-candy.png';import purpleCandy from'./images/purple-candy.png';import redCandy from'./images/red-candy.png';import yellowCandy from'./images/yellow-candy.png';import blank from'./images/blank.png';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var width=8;var candyColors=[blueCandy,orangeCandy,purpleCandy,redCandy,yellowCandy,greenCandy];var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),currentColorArrangement=_useState2[0],setCurrentColorArrangement=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),squareBeingDragged=_useState4[0],setSquareBeingDragged=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),squareBeingReplaced=_useState6[0],setSquareBeingReplaced=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),scoreDisplay=_useState8[0],setScoreDisplay=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),gameStarted=_useState10[0],setGameStarted=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),moves=_useState12[0],setMoves=_useState12[1];var checkForColumnOfFour=function checkForColumnOfFour(){var _loop=function _loop(){var columnOfFour=[i,i+width,i+width*2,i+width*3];var decidedColor=currentColorArrangement[i];var isBlank=currentColorArrangement[i]===blank;if(columnOfFour.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+4;});columnOfFour.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<=39;i++){var _ret=_loop();if(typeof _ret===\"object\")return _ret.v;}};var checkForRowOfFour=function checkForRowOfFour(){var _loop2=function _loop2(){var rowOfFour=[i,i+1,i+2,i+3];var decidedColor=currentColorArrangement[i];var notValid=[5,6,7,13,14,15,21,22,23,29,30,31,37,38,39,45,46,47,53,54,55,62,63,64];var isBlank=currentColorArrangement[i]===blank;if(notValid.includes(i))return\"continue\";if(rowOfFour.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+4;});rowOfFour.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<64;i++){var _ret2=_loop2();if(_ret2===\"continue\")continue;if(typeof _ret2===\"object\")return _ret2.v;}};var checkForColumnOfThree=function checkForColumnOfThree(){var _loop3=function _loop3(){var columnOfThree=[i,i+width,i+width*2];var decidedColor=currentColorArrangement[i];var isBlank=currentColorArrangement[i]===blank;if(columnOfThree.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+3;});columnOfThree.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<=47;i++){var _ret3=_loop3();if(typeof _ret3===\"object\")return _ret3.v;}};var checkForRowOfThree=function checkForRowOfThree(){var _loop4=function _loop4(){var rowOfThree=[i,i+1,i+2];var decidedColor=currentColorArrangement[i];var notValid=[6,7,14,15,22,23,30,31,38,39,46,47,54,55,63,64];var isBlank=currentColorArrangement[i]===blank;if(notValid.includes(i))return\"continue\";if(rowOfThree.every(function(square){return currentColorArrangement[square]===decidedColor&&!isBlank;})){setScoreDisplay(function(score){return score+3;});rowOfThree.forEach(function(square){return currentColorArrangement[square]=blank;});return{v:true};}};for(var i=0;i<64;i++){var _ret4=_loop4();if(_ret4===\"continue\")continue;if(typeof _ret4===\"object\")return _ret4.v;}};var moveIntoSquareBelow=function moveIntoSquareBelow(){for(var i=0;i<=55;i++){var firstRow=[0,1,2,3,4,5,6,7];var isFirstRow=firstRow.includes(i);if(isFirstRow&&currentColorArrangement[i]===blank){var randomNumber=Math.floor(Math.random()*candyColors.length);currentColorArrangement[i]=candyColors[randomNumber];}if(currentColorArrangement[i+width]===blank){currentColorArrangement[i+width]=currentColorArrangement[i];currentColorArrangement[i]=blank;}}};var dragStart=function dragStart(e){setSquareBeingDragged(e.target);};var dragDrop=function dragDrop(e){setSquareBeingReplaced(e.target);};var dragEnd=function dragEnd(){var squareBeingDraggedId=parseInt(squareBeingDragged.getAttribute('data-id'));var squareBeingReplacedId=parseInt(squareBeingReplaced.getAttribute('data-id'));currentColorArrangement[squareBeingReplacedId]=squareBeingDragged.getAttribute('src');currentColorArrangement[squareBeingDraggedId]=squareBeingReplaced.getAttribute('src');var validMoves=[squareBeingDraggedId-1,squareBeingDraggedId-width,squareBeingDraggedId+1,squareBeingDraggedId+width];var validMove=validMoves.includes(squareBeingReplacedId);var isAColumnOfFour=checkForColumnOfFour();var isARowOfFour=checkForRowOfFour();var isAColumnOfThree=checkForColumnOfThree();var isARowOfThree=checkForRowOfThree();if(squareBeingReplacedId&&validMove&&(isARowOfThree||isARowOfFour||isAColumnOfFour||isAColumnOfThree)){setSquareBeingDragged(null);setSquareBeingReplaced(null);setMoves(moves+1);}else{currentColorArrangement[squareBeingReplacedId]=squareBeingReplaced.getAttribute('src');currentColorArrangement[squareBeingDraggedId]=squareBeingDragged.getAttribute('src');setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));}};var createBoard=function createBoard(){var randomColorArrangement=[];for(var i=0;i<width*width;i++){var randomColor=candyColors[Math.floor(Math.random()*candyColors.length)];randomColorArrangement.push(randomColor);}setCurrentColorArrangement(randomColorArrangement);};useEffect(function(){createBoard();},[]);useEffect(function(){var timer=setInterval(function(){checkForColumnOfFour();checkForRowOfFour();checkForColumnOfThree();checkForRowOfThree();moveIntoSquareBelow();setCurrentColorArrangement(_toConsumableArray(currentColorArrangement));},100);if(moves>=15){clearInterval(timer);setGameStarted(false);alert('Гра завершена. Ви досягли ліміту ходів. Кількість очок: '+scoreDisplay);}return function(){return clearInterval(timer);};},[checkForColumnOfFour,checkForRowOfFour,checkForColumnOfThree,checkForRowOfThree,moveIntoSquareBelow,currentColorArrangement,moves]);var handleStartGame=function handleStartGame(){setGameStarted(true);};return/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:!gameStarted?/*#__PURE__*/_jsx(\"button\",{onClick:handleStartGame,children:\"Start\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"game\",children:currentColorArrangement.map(function(candyColor,index){return/*#__PURE__*/_jsx(\"img\",{src:candyColor,alt:candyColor,\"data-id\":index,draggable:true,onDragStart:dragStart,onDragOver:function onDragOver(e){return e.preventDefault();},onDragEnter:function onDragEnter(e){return e.preventDefault();},onDragLeave:function onDragLeave(e){return e.preventDefault();},onDrop:dragDrop,onDragEnd:dragEnd},index);})}),/*#__PURE__*/_jsx(ScoreBoard,{score:scoreDisplay,moves:moves})]})});};export default App;","map":{"version":3,"names":["useEffect","useState","ScoreBoard","blueCandy","greenCandy","orangeCandy","purpleCandy","redCandy","yellowCandy","blank","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","width","candyColors","App","_useState","_useState2","_slicedToArray","currentColorArrangement","setCurrentColorArrangement","_useState3","_useState4","squareBeingDragged","setSquareBeingDragged","_useState5","_useState6","squareBeingReplaced","setSquareBeingReplaced","_useState7","_useState8","scoreDisplay","setScoreDisplay","_useState9","_useState10","gameStarted","setGameStarted","_useState11","_useState12","moves","setMoves","checkForColumnOfFour","_loop","columnOfFour","i","decidedColor","isBlank","every","square","score","forEach","v","_ret","checkForRowOfFour","_loop2","rowOfFour","notValid","includes","_ret2","checkForColumnOfThree","_loop3","columnOfThree","_ret3","checkForRowOfThree","_loop4","rowOfThree","_ret4","moveIntoSquareBelow","firstRow","isFirstRow","randomNumber","Math","floor","random","length","dragStart","e","target","dragDrop","dragEnd","squareBeingDraggedId","parseInt","getAttribute","squareBeingReplacedId","validMoves","validMove","isAColumnOfFour","isARowOfFour","isAColumnOfThree","isARowOfThree","_toConsumableArray","createBoard","randomColorArrangement","randomColor","push","timer","setInterval","clearInterval","alert","handleStartGame","className","children","onClick","map","candyColor","index","src","alt","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd"],"sources":["/workspaces/Candy-Crush/src/App.js"],"sourcesContent":["import {useEffect, useState} from 'react'\nimport ScoreBoard from './components/ScoreBoard'\nimport blueCandy from './images/blue-candy.png'\nimport greenCandy from './images/green-candy.png'\nimport orangeCandy from './images/orange-candy.png'\nimport purpleCandy from './images/purple-candy.png'\nimport redCandy from './images/red-candy.png'\nimport yellowCandy from './images/yellow-candy.png'\nimport blank from './images/blank.png'\n\nconst width = 8\nconst candyColors = [\n    blueCandy,\n    orangeCandy,\n    purpleCandy,\n    redCandy,\n    yellowCandy,\n    greenCandy\n]\n\nconst App = () => {\n    const [currentColorArrangement, setCurrentColorArrangement] = useState([]);\n    const [squareBeingDragged, setSquareBeingDragged] = useState(null);\n    const [squareBeingReplaced, setSquareBeingReplaced] = useState(null);\n    const [scoreDisplay, setScoreDisplay] = useState(0);\n    const [gameStarted, setGameStarted] = useState(false);\n    const [moves, setMoves] = useState(0);\n\n    const checkForColumnOfFour = () => {\n        for (let i = 0; i <= 39; i++) {\n            const columnOfFour = [i, i + width, i + width * 2, i + width * 3]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                columnOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfFour = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfFour = [i, i + 1, i + 2, i + 3]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfFour.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 4)\n                rowOfFour.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForColumnOfThree = () => {\n        for (let i = 0; i <= 47; i++) {\n            const columnOfThree = [i, i + width, i + width * 2]\n            const decidedColor = currentColorArrangement[i]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (columnOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                columnOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const checkForRowOfThree = () => {\n        for (let i = 0; i < 64; i++) {\n            const rowOfThree = [i, i + 1, i + 2]\n            const decidedColor = currentColorArrangement[i]\n            const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n            const isBlank = currentColorArrangement[i] === blank\n\n            if (notValid.includes(i)) continue\n\n            if (rowOfThree.every(square => currentColorArrangement[square] === decidedColor && !isBlank)) {\n                setScoreDisplay((score) => score + 3)\n                rowOfThree.forEach(square => currentColorArrangement[square] = blank)\n                return true\n            }\n        }\n    }\n\n    const moveIntoSquareBelow = () => {\n        for (let i = 0; i <= 55; i++) {\n            const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n            const isFirstRow = firstRow.includes(i)\n\n            if (isFirstRow && currentColorArrangement[i] === blank) {\n                let randomNumber = Math.floor(Math.random() * candyColors.length)\n                currentColorArrangement[i] = candyColors[randomNumber]\n            }\n\n            if ((currentColorArrangement[i + width]) === blank) {\n                currentColorArrangement[i + width] = currentColorArrangement[i]\n                currentColorArrangement[i] = blank\n            }\n        }\n    }\n\n    const dragStart = (e) => {\n        setSquareBeingDragged(e.target)\n    }\n    const dragDrop = (e) => {\n        setSquareBeingReplaced(e.target)\n    }\n    const dragEnd = () => {\n        const squareBeingDraggedId = parseInt(squareBeingDragged.getAttribute('data-id'))\n        const squareBeingReplacedId = parseInt(squareBeingReplaced.getAttribute('data-id'))\n\n        currentColorArrangement[squareBeingReplacedId] = squareBeingDragged.getAttribute('src')\n        currentColorArrangement[squareBeingDraggedId] = squareBeingReplaced.getAttribute('src')\n\n        const validMoves = [\n            squareBeingDraggedId - 1,\n            squareBeingDraggedId - width,\n            squareBeingDraggedId + 1,\n            squareBeingDraggedId + width\n        ]\n\n        const validMove = validMoves.includes(squareBeingReplacedId)\n\n        const isAColumnOfFour = checkForColumnOfFour()\n        const isARowOfFour = checkForRowOfFour()\n        const isAColumnOfThree = checkForColumnOfThree()\n        const isARowOfThree = checkForRowOfThree()\n\n        if (squareBeingReplacedId &&\n            validMove &&\n            (isARowOfThree || isARowOfFour || isAColumnOfFour || isAColumnOfThree)) {\n            setSquareBeingDragged(null)\n            setSquareBeingReplaced(null)\n            setMoves(moves + 1);\n        } else {\n            currentColorArrangement[squareBeingReplacedId] = squareBeingReplaced.getAttribute('src')\n            currentColorArrangement[squareBeingDraggedId] = squareBeingDragged.getAttribute('src')\n            setCurrentColorArrangement([...currentColorArrangement])\n        }\n    }\n\n\n    const createBoard = () => {\n        const randomColorArrangement = []\n        for (let i = 0; i < width * width; i++) {\n            const randomColor = candyColors[Math.floor(Math.random() * candyColors.length)]\n            randomColorArrangement.push(randomColor)\n        }\n        setCurrentColorArrangement(randomColorArrangement)\n    }\n\n    useEffect(() => {\n        createBoard()\n    }, [])\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            checkForColumnOfFour();\n            checkForRowOfFour();\n            checkForColumnOfThree();\n            checkForRowOfThree();\n            moveIntoSquareBelow();\n            setCurrentColorArrangement([...currentColorArrangement]);\n        }, 100);\n    \n        if (moves >= 15) { \n            clearInterval(timer);\n            setGameStarted(false);\n             alert('Гра завершена. Ви досягли ліміту ходів. Кількість очок: ' + scoreDisplay);\n        }\n    \n        return () => clearInterval(timer);\n    }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangement, moves]);\n    const handleStartGame = () => {\n        setGameStarted(true);\n      };\n    \n      return (\n        <div className=\"app\">\n          {!gameStarted ? (\n            <button onClick={handleStartGame}>Start</button>\n          ) : (\n            <>\n              <div className=\"game\">\n                {currentColorArrangement.map((candyColor, index) => (\n                  <img\n                    key={index}\n                    src={candyColor}\n                    alt={candyColor}\n                    data-id={index}\n                    draggable={true}\n                    onDragStart={dragStart}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragEnter={(e) => e.preventDefault()}\n                    onDragLeave={(e) => e.preventDefault()}\n                    onDrop={dragDrop}\n                    onDragEnd={dragEnd}\n                  />\n                ))}\n                </div>\n          <ScoreBoard score={scoreDisplay} moves={moves} />\n        </>\n      )}\n    </div>\n  );\n};\n    export default App;\n    \n    \n    \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}